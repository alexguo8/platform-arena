{"version":3,"sources":["client/utils/setAuthToken.js","client/actions/authActions.js","client/actions/types.js","client/reducers/authReducer.js","client/reducers/errorsReducer.js","client/reducers/playerReducer.js","client/reducers/networkReducer.js","client/reducers/index.js","client/store.js","client/components/layouts/Navbar.js","client/components/accounts/RegisterForm.js","client/components/accounts/LoginForm.js","client/components/accounts/UserProfile.js","client/game-client/state.js","client/game-client/networking.js","client/components/layouts/Lobby.js","client/actions/networkActions.js","client/game-client/assets.js","client/game-client/render.js","client/game-client/input.js","client/actions/playerActions.js","client/components/layouts/GameCanvas.js","client/components/layouts/Tutorial.js","client/components/layouts/RoomSelection.js","client/components/private-route/PrivateRoute.js","App.js","serviceWorker.js","index.js","shared/objectTypes.js","shared/constants.js"],"names":["setAuthToken","token","axios","defaults","headers","common","resetErrors","dispatch","type","payload","setCurrentUser","decoded","logoutUser","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","room","character","handler","combineReducers","auth","state","action","errors","player","network","store","createStore","rootReducer","applyMiddleware","thunk","connect","props","className","to","style","fontFamily","registerUser","history","post","then","res","push","catch","err","response","data","withRouter","useState","username","setUsername","email","setEmail","password","setPassword","password2","setPassword2","setErrors","useEffect","paddingLeft","noValidate","onSubmit","e","preventDefault","newUser","onChange","target","value","error","id","classnames","invalid","htmlFor","width","borderRadius","letterSpacing","marginTop","loginUser","setItem","jwt_decode","console","log","emailNotFound","passwordIncorrect","height","onClick","gameUpdates","lobbyUpdate","lobbyStart","gameStart","firstServerTimestamp","getLobbyState","processLobbyUpdate","update","getLobbyStart","processLobbyStart","processGameUpdate","t","Date","now","base","getBaseUpdate","splice","currentServerTime","serverTime","i","length","interpolateObject","object1","object2","ratio","interpolated","Object","keys","forEach","key","d1","d2","Math","abs","PI","interpolateDirection","interpolateObjectArray","objects1","objects2","map","o","find","o2","Constants","NetworkHandler","connectToServer","Promise","resolve","socket","on","MSG_TYPES","LOBBY_UPDATE","GAME_UPDATE","START_GAME","joinLobby","emit","JOIN_LOBBY","updateLobby","disconnect","startGame","sendClick","throttle","x","y","CLICK","sendKeyPress","KEYPRESS","sendKeyUp","KEYUP","this","socketProtocol","window","location","protocol","includes","io","reconnection","setNetworkHandler","networkHandler","useRef","players","setPlayers","setLobbyStart","updateInterval","listItems","k","Type","PANDA","src","alt","SEAL","DINO","EAGLE","current","setInterval","clearInterval","selectCharacter","assets","downloadPromise","all","assetName","asset","Image","onload","getAsset","PLAYER_WIDTH","PLAYER_HEIGHT","BULLET_WIDTH","BULLET_HEIGHT","DRILL_WIDTH","DRILL_HEIGHT","EXPLOSION_WIDTH","EXPLOSION_HEIGHT","BOMB_WIDTH","BOMB_HEIGHT","MINE_WIDTH","MINE_HEIGHT","POWERUP_WIDTH","POWERUP_HEIGHT","PLAYER_POWERUP_WIDTH","PLAYER_POWERUP_HEIGHT","Renderer","canvas","context","getContext","setCanvasDimensions","addEventListener","debounce","renderInterval","render","WIDTH","HEIGHT","baseUpdate","next","me","others","platforms","weapons","powerups","getCurrentState","fillStyle","fillRect","renderBackground","p","platform","platformGradient","createLinearGradient","addColorStop","renderPlatform","w","BULLET","bullet","drawImage","image","save","translate","rotate","dir","restore","renderBullet","DRILL","drill","renderDrill","BOMB","bomb","renderBomb","MINE","mine","renderMine","TELEPORT_BULLET","tBullet","TELEPORT_BULLET_WIDTH","TELEPORT_BULLET_HEIGHT","renderTeleportBullet","FIRE_CLOUD","cloud","cooldown","globalAlpha","renderFireCloud","powerup","DRILL_POWERUP","MINE_POWERUP","BOMB_POWERUP","REFLECT_POWERUP","renderPowerup","renderPlayer","renderHealthBar","renderPlayerPowerup","renderCrown","EXPLOSION","explosion","renderExplosion","LASER","laser","LASER_HEIGHT","renderLaser","BAMBOO","bamboo","sin","BAMBOO_WIDTH","BAMBOO_HEIGHT","renderBamboo","faceRight","colour","health","abilityMeter","HEALTHBAR_HEIGHT","HEALTHBAR_WIDTH","textAlign","fillText","NO_POWERUP","font","specialAmmo","InputHandler","onClickEvent","bind","onKeyPressEvent","onKeyPress","onKeyUpEvent","onKeyUp","button","left","offsetLeft","clientLeft","top","offsetTop","clientTop","pageX","pageY","String","fromCharCode","keyCode","toUpperCase","removeEventListener","resetRoom","canvasRef","renderer","inputHandler","startRendering","startCapturingInput","stopCapturingInput","stopRendering","ref","Tutorial","class","joinRoom","user_room","resetNetworkHandler","setRoom","Component","component","rest","jwtToken","currentTime","exp","href","DefaultContainer","exact","path","RoomSelection","Register","Login","UserProfile","App","Lobby","GameCanvas","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports","freeze","PLAYER","PLATFORM","POWERUP","SHIELD_POWERUP","NO_CHARACTER","BAMBOO_STORM","PLAYER_MAX_HP","PLAYER_SPEED","PLAYER_JUMP","PLAYER_GRAVITY","PLAYER_FIRE_COOLDOWN","BULLET_SPEED","BULLET_DAMAGE","REFLECT_BULLET_BOUNCES","REFLECT_BULLET_COOLDOWN","DRILL_SPEED","BOMB_SPEED","BOMB_GRAVITY","BOMB_COOLDOWN","BOMB_LIFETIME","MINE_SPEED","MINE_COOLDOWN","EXPLOSION_DAMAGE","BAMBOO_STORM_COOLDOWN","BAMBOO_STORM_TIMES","BAMBOO_SPEED","BAMBOO_COOLDOWN","BAMBOO_DAMAGE","LASER_COOLDOWN","LASER_LIFETIME","LASER_DAMAGE","FIRE_CLOUD_WIDTH","FIRE_CLOUD_HEIGHT","FIRE_CLOUD_COOLDOWN","FIRE_CLOUD_LIFETIME","FIRE_CLOUD_DAMAGE","TELEPORT_BULLET_SPEED","TELEPORT_BULLET_DAMAGE","PLATFORM_WIDTH","PLATFORM_HEIGHT","PLATFORM_RESPAWN","SCORE_BULLET_HIT","SCORE_PER_SECOND","MAP_SIZE","GAME_OVER"],"mappings":"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","file":"static/js/main.588aa225.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\nexport const registerUser = (user, history) => dispatch => {\n    axios.post(\"/users/register\", user)\n        .then(res => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: {}\n            })\n            history.push(\"/login\");\n        })\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const resetErrors = () => dispatch => {\n    dispatch({\n        type: GET_ERRORS,\n        payload: {}\n    })\n}\n\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const loginUser = user => dispatch => {\n    axios.post(\"/users/login\", user)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            console.log(decoded)\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const GET_USER_ROOM = \"GET_USER_ROOM\";\nexport const RESET_ROOM = \"RESET_ROOM\";\nexport const GET_NETWORK_HANDLER = \"GET_NETWORK_HANDLER\";\n","import  { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        default:\n            return state;\n    }\n};","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n};","import  { GET_USER_ROOM, RESET_ROOM } from \"../actions/types\";\n\nconst initialState = {\n    user: \"\",\n    room: \"\",\n    character: \"\",\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case GET_USER_ROOM:\n            return {\n                user: action.payload.user,\n                room: action.payload.room,\n            };\n        case RESET_ROOM:\n            return {\n                ...state,\n                room: \"\"\n            };\n        default:\n            return state;\n    }\n};\n","import  { GET_NETWORK_HANDLER } from \"../actions/types\";\n\nconst initialState = {\n    handler: {}\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case GET_NETWORK_HANDLER:\n            return {\n                handler: action.payload\n            }\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorsReducer from \"./errorsReducer\";\nimport playerReducer from \"./playerReducer\";\nimport networkReducer from \"./networkReducer\";\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorsReducer,\n    player: playerReducer,\n    network: networkReducer,\n});","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk)\n);\n\nexport default store;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n    return (\n        <div className=\"navbar-fixed\">\n            <nav className=\"z-depth-0\">\n                <div className=\"nav-wrapper light-blue lighten-4\">\n                    <Link\n                        to=\"/\"\n                        style={{\n                            fontFamily: \"Verdana, Geneva, sans-serif\"\n                        }}\n                        className=\"col s5 brand-logo center black-text\"\n                    >\n                        <i className=\"material-icons\">horizontal_split</i>\n                        Platform Arena\n                    </Link>\n                    <ul className=\"right hide-on-med-and-down\">\n                            <li>\n                                <Link\n                                    to=\"/how-to-play\"\n                                    style={{\n                                        fontFamily: \"Verdana, Geneva, sans-serif\"\n                                    }}\n                                    className=\"col s5 black-text\"\n                                >\n                                    How To Play\n                                </Link>\n                            </li>\n                        {!props.auth.isAuthenticated && \n                            <>\n                            <li>\n                                <Link\n                                    to=\"/register\"\n                                    style={{\n                                        fontFamily: \"Verdana, Geneva, sans-serif\"\n                                    }}\n                                    className=\"col s5 black-text\"\n                                >\n                                    Register\n                                </Link>\n                            </li>\n                            <li>\n                                <Link\n                                    to=\"/login\"\n                                    style={{\n                                        fontFamily: \"Verdana, Geneva, sans-serif\"\n                                    }}\n                                    className=\"col s5 black-text\"\n                                >\n                                    Login\n                                </Link>\n                            </li>\n                            </>\n                        }\n                        {props.auth.isAuthenticated &&\n                            <li>\n                                <Link\n                                    to=\"/profile\"\n                                    style={{\n                                        fontFamily: \"Verdana, Geneva, sans-serif\"\n                                    }}\n                                    className=\"col s5 black-text\"\n                                >\n                                    Profile\n                                </Link>\n                            </li>\n                        }\n                    </ul>\n                </div>\n            </nav>\n        </div>\n    );\n};\n\nNavbar.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navbar);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { registerUser, resetErrors } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nconst RegisterForm = (props) => {\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [errors, setErrors] = useState({});\n    const { resetErrors } = props;\n\n    useEffect(() => {\n        resetErrors();\n    }, [resetErrors]);\n\n    useEffect(() => {\n        if (props.errors) {\n            setErrors(props.errors);\n        }\n    }, [props.errors]);\n\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            props.history.push(\"/join\");\n        }\n    }, [props.auth.isAuthenticated, props.history]);\n    \n    const onSubmit = e => {\n        e.preventDefault();\n\n        const newUser = {\n            username: username,\n            email: email,\n            password: password,\n            password2: password2\n        }\n        props.registerUser(newUser, props.history);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col s8 offset-s2\">\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\n                        <i className=\"material-icons left\">\n                            keyboard_backspace\n                        </i>\n                        Back to Home\n                    </Link>\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <h4>\n                            Register below\n                        </h4>\n                        <p className=\"grey-text text-darken-1\">\n                            Already have an account?\n                            <Link to=\"/login\"> Log in </Link>\n                        </p>\n                    </div>\n                    <form noValidate onSubmit={onSubmit}>\n                        <div className=\"input-field col s12\">\n                            <input\n                            onChange={e => setUsername(e.target.value)}\n                            value={username}\n                            error={errors.username}\n                            id=\"name\"\n                            type=\"text\"\n                            className={classnames(\"\", { invalid: errors.username })}\n                            />\n                            <label htmlFor=\"name\">Username</label>\n                            <span className=\"red-text\">{errors.username}</span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <input\n                            onChange={e => setEmail(e.target.value)}\n                            value={email}\n                            error={errors.email}\n                            id=\"email\"\n                            type=\"email\"\n                            className={classnames(\"\", { invalid: errors.email })}\n                            />\n                            <label htmlFor=\"email\">Email</label>\n                            <span className=\"red-text\">{errors.email}</span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <input\n                            onChange={e => setPassword(e.target.value)}\n                            value={password}\n                            error={errors.password}\n                            id=\"password\"\n                            type=\"password\"\n                            className={classnames(\"\", { invalid: errors.password })}\n                            />\n                            <label htmlFor=\"password\">Password</label>\n                            <span className=\"red-text\">{errors.password}</span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <input\n                            onChange={e => setPassword2(e.target.value)}\n                            value={password2}\n                            error={errors.password2}\n                            className={classnames(\"\", { invalid: errors.password2 })}\n                            id=\"password2\"\n                            type=\"password\"\n                            />\n                            <label htmlFor=\"password2\">Confirm Password</label>\n                            <span className=\"red-text\">{errors.password2}</span>\n                        </div>\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                            <button\n                            style={{\n                                width: \"150px\",\n                                borderRadius: \"3px\",\n                                letterSpacing: \"1.5px\",\n                                marginTop: \"1rem\"\n                            }}\n                            type=\"submit\"\n                            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                            >\n                            Sign up\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nRegisterForm.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    resetErrors: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser, resetErrors }\n)(withRouter(RegisterForm));","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { loginUser, resetErrors } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nconst LoginForm = (props) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState({});\n    const { resetErrors } = props;\n\n    useEffect(() => {\n        resetErrors();\n    }, [resetErrors]);\n\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            props.history.push(\"/\");\n        }\n\n        if (props.errors) {\n            setErrors(props.errors);\n        }\n    }, [props.errors, props.auth.isAuthenticated, props.history]);\n\n    const onSubmit = e => {\n        e.preventDefault();\n        \n        const user = {\n            email: email,\n            password: password,\n        }\n        props.loginUser(user);\n    }\n\n    return (\n        <div className=\"container\">\n            <div style={{ marginTop: \"4rem\" }} className=\"row\">\n                <div className=\"col s8 offset-s2\">\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\n                        <i className=\"material-icons left\">keyboard_backspace</i> Back to\n                        home\n                    </Link>\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <h4>\n                            Login below\n                        </h4>\n                        <p className=\"grey-text text-darken-1\">\n                            Don't have an account? <Link to=\"/register\">Register</Link>\n                        </p>\n                    </div>\n                    <form noValidate onSubmit={onSubmit}>\n                        <div className=\"input-field col s12\">\n                            <input\n                                onChange={e => setEmail(e.target.value)}\n                                value={email}\n                                error={errors.email}\n                                id=\"email\"\n                                type=\"email\"\n                                className={classnames(\"\", { invalid: errors.email || errors.emailNotFound })}\n                            />\n                            <label htmlFor=\"email\">Email</label>\n                            <span className=\"red-text\">{errors.email}{errors.emailNotFound}</span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <input\n                                onChange={e => setPassword(e.target.value)}\n                                value={password}\n                                error={errors.password}\n                                id=\"password\"\n                                type=\"password\"\n                                className={classnames(\"\", { invalid: errors.password || errors.passwordIncorrect })}\n                            />\n                            <label htmlFor=\"password\">Password</label>\n                            <span className=\"red-text\">{errors.password}{errors.passwordIncorrect}</span>\n                        </div>\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                            <button\n                                style={{\n                                    width: \"150px\",\n                                    borderRadius: \"3px\",\n                                    letterSpacing: \"1.5px\",\n                                    marginTop: \"1rem\"\n                                }}\n                                type=\"submit\"\n                                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                            >\n                                Login\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nLoginForm.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    resetErrors: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { loginUser, resetErrors }\n)(LoginForm);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nconst UserProfile = (props) => {\n    const onLogoutClick = e => {\n        e.preventDefault();\n        props.logoutUser();\n    };\n\n    return (\n        <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n            <div className=\"row\">\n            <div className=\"col s12 center-align\">\n                <h4>\n                <p className=\"flow-text grey-text text-darken-1\">\n                    Welcome to your profile. Stats coming soon!\n                </p>\n                </h4>\n                <button\n                style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                }}\n                onClick={onLogoutClick}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                Logout\n                </button>\n            </div>\n            </div>\n        </div>\n    );\n};\n\nUserProfile.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(UserProfile);","// The \"current\" state will always be RENDER_DELAY ms behind server time.\n// This makes gameplay smoother and lag less noticeable.\nconst RENDER_DELAY = 100;\n\nconst gameUpdates = [];\nlet lobbyUpdate = {};\nlet lobbyStart = false;\nlet gameStart = 0;\nlet firstServerTimestamp = 0;\n\nexport function initState() {\n    gameStart = 0;\n    firstServerTimestamp = 0;\n}\n\nexport function getLobbyState() {\n    return lobbyUpdate;\n}\n\nexport function processLobbyUpdate(update) {\n    lobbyUpdate = update;\n}\n\nexport function getLobbyStart() {\n    return lobbyStart;\n}\n\nexport function resetLobbyStart() {\n    lobbyStart = false;\n}\n\nexport function processLobbyStart(update) {\n    lobbyStart = update;\n}\n\nexport function processGameUpdate(update) {\n    if (!firstServerTimestamp) {\n        firstServerTimestamp = update.t;\n        gameStart = Date.now();\n    }\n    gameUpdates.push(update);\n\n    // Keep only one game update before the current server time\n    const base = getBaseUpdate();\n    if (base > 0) {\n        gameUpdates.splice(0, base);\n    }\n}\n\nfunction currentServerTime() {\n    return firstServerTimestamp + (Date.now() - gameStart) - RENDER_DELAY;\n}\n\n// Returns the index of the base update, the first game update before\n// current server time, or -1 if N/A.\nfunction getBaseUpdate() {\n    const serverTime = currentServerTime();\n    for (let i = gameUpdates.length - 1; i >= 0; i--) {\n        if (gameUpdates[i].t <= serverTime) {\n        return i;\n        }\n    }\n    return -1;\n}\n\n// Returns { me, others, bullets }\nexport function getCurrentState() {\n    if (!firstServerTimestamp) {\n        return {};\n    }\n\n    const base = getBaseUpdate();\n    const serverTime = currentServerTime();\n\n    // If base is the most recent update we have, use its state.\n    // Otherwise, interpolate between its state and the state of (base + 1).\n    if (base < 0 || base === gameUpdates.length - 1) {\n        return gameUpdates[gameUpdates.length - 1];\n    } else {\n        const baseUpdate = gameUpdates[base];\n        const next = gameUpdates[base + 1];\n        const ratio = (serverTime - baseUpdate.t) / (next.t - baseUpdate.t);\n        return {\n            me: interpolateObject(baseUpdate.me, next.me, ratio),\n            others: interpolateObjectArray(baseUpdate.others, next.others, ratio),\n            platforms: baseUpdate.platforms,\n            weapons: interpolateObjectArray(baseUpdate.weapons, next.weapons, ratio),\n            powerups: baseUpdate.powerups,\n        };\n    }\n}\n\nfunction interpolateObject(object1, object2, ratio) {\n    if (!object2) {\n        return object1;\n    }\n\n    const interpolated = {};\n    Object.keys(object1).forEach(key => {\n        if (key === 'direction') {\n            interpolated[key] = interpolateDirection(object1[key], object2[key], ratio);\n        } else if (key === \"specialAmmo\" || key === \"username\") {\n            interpolated[key] = object1[key];\n        } else {\n            interpolated[key] = object1[key] + (object2[key] - object1[key]) * ratio;\n        }\n    });\n    \n    return interpolated;\n}\n\nfunction interpolateObjectArray(objects1, objects2, ratio) {\n    return objects1.map(o => interpolateObject(o, objects2.find(o2 => o.id === o2.id), ratio));\n}\n\n// Determines the best way to rotate (cw or ccw) when interpolating a direction.\n// For example, when rotating from -3 radians to +3 radians, we should really rotate from\n// -3 radians to +3 - 2pi radians.\nfunction interpolateDirection(d1, d2, ratio) {\n    const absD = Math.abs(d2 - d1);\n    if (absD >= Math.PI) {\n        // The angle between the directions is large - we should rotate the other way\n        if (d1 > d2) {\n            return d1 + (d2 + 2 * Math.PI - d1) * ratio;\n        } else {\n            return d1 - (d2 - 2 * Math.PI - d1) * ratio;\n        }\n    } else {\n        // Normal interp\n        return d1 + (d2 - d1) * ratio;\n    }\n}\n","import io from 'socket.io-client';\nimport { throttle } from 'throttle-debounce';\nimport { processGameUpdate, processLobbyUpdate, processLobbyStart } from './state';\n\nconst Constants = require('../../shared/constants');\n\nexport class NetworkHandler {\n    constructor() {\n        this.socketProtocol = (window.location.protocol.includes('https')) ? 'wss' : 'ws';\n        this.socket = io(`${this.socketProtocol}://localhost:5000`, { reconnection: false });\n        \n    }\n\n    connectToServer = () => (\n        new Promise(resolve => {\n            this.socket.on('connect', () => {\n                console.log('Connected to server!');\n                resolve();\n            });\n        }).then(() => {\n            // Register callbacks\n            this.socket.on(Constants.MSG_TYPES.LOBBY_UPDATE, processLobbyUpdate);\n            this.socket.on(Constants.MSG_TYPES.GAME_UPDATE, processGameUpdate);\n            this.socket.on(Constants.MSG_TYPES.START_GAME, processLobbyStart);\n            //this.socket.on(Constants.MSG_TYPES.GAME_OVER, onGameOver);\n            this.socket.on('disconnect', () => {\n                console.log('Disconnected from server.');\n            });\n        })\n    );\n\n    joinLobby = (username, room) => {\n        this.socket.emit(Constants.MSG_TYPES.JOIN_LOBBY, username, room);\n    }\n\n    updateLobby = (character, room) => {\n        this.socket.emit(Constants.MSG_TYPES.LOBBY_UPDATE, character, room);\n    }\n\n    disconnect = () => {\n        this.socket.disconnect();\n    }\n\n    startGame = (room) => {\n        this.socket.emit(Constants.MSG_TYPES.START_GAME, room);\n    }\n\n    sendClick = throttle(20, (x, y, room) => {\n        this.socket.emit(Constants.MSG_TYPES.CLICK, x, y, room, Constants.MSG_TYPES.CLICK);\n    });\n\n    sendKeyPress = throttle(20, (key, room) => {\n        this.socket.emit(Constants.MSG_TYPES.KEYPRESS, key, room, Constants.MSG_TYPES.KEYPRESS);\n    });\n\n    sendKeyUp = throttle(20, (key, room) => {\n        this.socket.emit(Constants.MSG_TYPES.KEYUP, key, room, Constants.MSG_TYPES.KEYUP);\n    });\n\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setNetworkHandler } from \"../../actions/networkActions\";\nimport Type from \"../../../shared/objectTypes\"\nimport { NetworkHandler } from \"../../game-client/networking\";\nimport { getLobbyState, getLobbyStart } from \"../../game-client/state\";\n\nconst Lobby = (props) => {\n    const networkHandler = useRef();\n    const [players, setPlayers] = useState({});\n    const [lobbyStart, setLobbyStart] = useState(false);\n    const updateInterval = useRef();\n    const listItems = Object.keys(players).map(k =>\n        <li key={k}>\n            <div className=\"card col s1\">\n                {players[k].username}\n                <div className=\"card-image\">\n                    {players[k].character === Type.PANDA &&\n                    <img src={process.env.PUBLIC_URL + \"/assets/pandaRight.png\"} alt=\"Panda\" />}\n                    {players[k].character === Type.SEAL &&\n                    <img src={process.env.PUBLIC_URL + \"/assets/sealRight.png\"} alt=\"Seal\" />}\n                    {players[k].character === Type.DINO &&\n                    <img src={process.env.PUBLIC_URL + \"/assets/dinoRight.png\"} alt=\"Dino\" />}\n                    {players[k].character === Type.EAGLE &&\n                    <img src={process.env.PUBLIC_URL + \"/assets/eagleRight.png\"} alt=\"Eagle\" />}\n                </div>\n                {players[k].character === Type.PANDA && \"Panda\"}\n                {players[k].character === Type.SEAL && \"Seal\"}\n                {players[k].character === Type.DINO &&  \"Dino\"}\n                {players[k].character === Type.EAGLE && \"Eagle\"}\n            </div>\n        </li>\n    );\n\n    \n    useEffect(() => {\n        if (props.player.room === \"\") {\n            props.history.push(\"/\");\n            return;\n        }\n        if (Object.keys(props.network.handler).length === 0) {\n            networkHandler.current = new NetworkHandler();\n            props.setNetworkHandler(networkHandler.current);\n            networkHandler.current.connectToServer()\n                .then(() => {\n                    networkHandler.current.joinLobby(props.player.user, props.player.room);\n                });\n        } else {\n            networkHandler.current = props.network.handler;\n        }\n        updateInterval.current = setInterval(() => {\n            setPlayers(getLobbyState);\n            setLobbyStart(getLobbyStart);\n        }, 1000 / 60);\n    }, []);\n\n    useEffect(() => {\n        if (lobbyStart) {\n            clearInterval(updateInterval.current);\n            props.history.push(\"/game\");\n        }\n    }, [lobbyStart])\n\n    const selectCharacter = character => {\n        networkHandler.current.updateLobby(character, props.player.room)\n    };\n\n\n    const onStart = () => {\n        networkHandler.current.startGame(props.player.room);\n    }\n\n    return (\n        <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n            <div style={{ marginTop: \"4rem\" }} className=\"row\">\n                <div className=\"col s12 center-align\">\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\n                        <i className=\"material-icons left\">\n                            keyboard_backspace\n                        </i>\n                        Leave\n                    </Link>\n                    <div className=\"col s12\">\n                        <h4>\n                            <span style={{ fontFamily: \"Verdana, Geneva, sans-serif\" }}>Lobby</span>\n                        </h4>\n                        <br />\n                    </div>\n\n                    <div className=\"col s12 center-align\">\n                        <div className=\"card col s1 hoverable\">\n                            <div className=\"card-image\" onClick={e => selectCharacter(Type.PANDA)}>\n                                <img src={process.env.PUBLIC_URL + \"/assets/pandaRight.png\"} alt=\"Panda\" />\n                            </div>\n                            Panda\n                        </div>\n                        <div className=\"card col s1 hoverable\">\n                            <div className=\"card-image\" onClick={e => selectCharacter(Type.SEAL)}>\n                                <img src={process.env.PUBLIC_URL + \"/assets/sealRight.png\"} alt=\"Seal\" />\n                            </div>\n                            Seal\n                        </div>\n                        <div className=\"card col s1 hoverable\">\n                            <div className=\"card-image\" onClick={e => selectCharacter(Type.DINO)}>\n                                <img src={process.env.PUBLIC_URL + \"/assets/dinoRight.png\"} alt=\"Dino\" />\n                            </div>\n                            Dino\n                        </div>\n                        <div className=\"card col s1 hoverable\">\n                            <div className=\"card-image\" onClick={e => selectCharacter(Type.EAGLE)}>\n                                <img src={process.env.PUBLIC_URL + \"/assets/eagleRight.png\"} alt=\"Eagle\" />\n                            </div>\n                            Eagle\n                        </div>\n                    </div>\n\n                    <div className=\"col s12 center-align\">\n                        <ul>\n                            {listItems}\n                        </ul>\n                    </div>\n\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <button\n                            onClick={onStart}\n                            style={{\n                                width: \"250px\",\n                                borderRadius: \"3px\",\n                                letterSpacing: \"1.5px\",\n                                marginTop: \"1rem\"\n                            }}\n                            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                        >\n                            Start\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nLobby.propTypes = {\n    setNetworkHandler: PropTypes.func.isRequired,\n    player: PropTypes.object.isRequired,\n    network: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    player: state.player,\n    network: state.network\n});\n\nexport default connect(\n    mapStateToProps,\n    { setNetworkHandler }\n)(Lobby);","import { GET_NETWORK_HANDLER } from \"./types\";\n\nexport const setNetworkHandler = networkHandler => dispatch => {\n    dispatch({\n        type: GET_NETWORK_HANDLER,\n        payload: networkHandler\n    })\n};\n\nexport const resetNetworkHandler = () => dispatch => {\n    dispatch({\n        type: GET_NETWORK_HANDLER,\n        payload: {}\n    });\n}\n","const ASSET_NAMES = [\n  'ship.svg',\n  'bullet.svg',\n  \"greenBullet.png\",\n  \"blueBullet.png\",\n  \"redBullet.png\",\n  \"yellowBullet.png\",\n  \"pandaRight.png\",\n  \"pandaLeft.png\",\n  \"sealLeft.png\",\n  \"sealRight.png\",\n  \"dinoLeft.png\",\n  \"dinoRight.png\",\n  \"eagleLeft.png\",\n  \"eagleRight.png\",\n  \"explosion.png\",\n  \"drillRight.png\",\n  \"bomb.png\",\n  \"mine.png\",\n  \"drillPowerup.png\",\n  \"minePowerup.png\",\n  \"bombPowerup.png\",\n  \"reflectPowerup.png\",\n  \"crown.png\",\n  \"bamboo.png\",\n  \"laser.png\",\n  \"fireCloud.png\",\n  \"teleportBulletRight.png\",\n  \"teleportBulletLeft.png\",\n];\n\nconst assets = {};\n\nconst downloadPromise = Promise.all(ASSET_NAMES.map(downloadAsset));\n\nfunction downloadAsset(assetName) {\n    return new Promise(resolve => {\n        const asset = new Image();\n        asset.onload = () => {\n            console.log(`Downloaded ${assetName}`);\n            assets[assetName] = asset;\n            resolve();\n        };\n        asset.src = `/assets/${assetName}`;\n    });\n}\n\nexport const downloadAssets = () => downloadPromise;\n\nexport const getAsset = assetName => assets[assetName];\n\n// const ASSET_NAMES = [\n//     'ship.svg',\n//     'bullet.svg',\n//     \"greenBullet.png\",\n//     \"pandaRight.png\",\n//     \"pandaLeft.png\",\n//     \"explosion.png\",\n//     \"drillRight.png\",\n//     \"bomb.png\",\n//     \"mine.png\",\n//     \"drillPowerup.png\",\n//     \"minePowerup.png\",\n//     \"bombPowerup.png\",\n//     \"reflectPowerup.png\"\n//   ];\n  \n//   export class AssetsHandler {\n//       constructor() {\n//           this.assets = {};\n//           this.downloadPromise = Promise.all(ASSET_NAMES.map(this.downloadAsset));\n//       }\n  \n//       downloadAsset(assetName) {\n//           return new Promise(resolve => {\n//               const asset = new Image();\n//               asset.onload = () => {\n//                   console.log(`Downloaded ${assetName}`);\n//                   this.assets[assetName] = asset;\n//                   resolve();\n//               };\n//               asset.src = `/assets/${assetName}`;\n//           });\n//       }\n      \n//       downloadAssets = () => this.downloadPromise;\n  \n//       getAsset = assetName => this.assets[assetName];\n  \n//   }\n  ","import { debounce } from \"throttle-debounce\";\nimport { getAsset } from \"./assets\";\nimport { getCurrentState } from \"./state\";\n\nconst Type = require(\"../../shared/objectTypes\");\nconst Constants = require(\"../../shared/constants\");\n\nconst { PLAYER_WIDTH, PLAYER_HEIGHT, BULLET_WIDTH, BULLET_HEIGHT, \n    DRILL_WIDTH, DRILL_HEIGHT, EXPLOSION_WIDTH, EXPLOSION_HEIGHT, \n    BOMB_WIDTH, BOMB_HEIGHT, MINE_WIDTH, MINE_HEIGHT,\n    POWERUP_WIDTH, POWERUP_HEIGHT, PLAYER_POWERUP_WIDTH, PLAYER_POWERUP_HEIGHT,\n    } = Constants;\n\nexport class Renderer {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.context = canvas.getContext(\"2d\");\n        setCanvasDimensions(canvas);\n        window.addEventListener(\"resize\", debounce(40, setCanvasDimensions));\n        this.renderInterval = setInterval(() => render(this.canvas, this.context), 1000 / 60);\n    }\n\n    // Replaces main menu rendering with game rendering.\n    startRendering() {\n        clearInterval(this.renderInterval);\n        this.renderInterval = setInterval(() => render(this.canvas, this.context), 1000 / 60);\n        console.log(\"Starting rendering\");\n    }\n\n    // Replaces game rendering with main menu rendering.\n    stopRendering() {\n        clearInterval(this.renderInterval);\n        //this.renderInterval = setInterval(() => render(this.canvas, this.context), 1000 / 60);\n        console.log(\"Stopping rendering\")\n        //renderInterval = setInterval(renderMainMenu, 1000 / 60);\n    }\n}\n\nfunction setCanvasDimensions(canvas) {\n  // On small screens (e.g. phones), we want to \"zoom out\" so players can still see at least\n  // 800 in-game units of width.\n//   const scaleRatio = Math.max(1, 800 / window.innerWidth);\n//   canvas.width = scaleRatio * window.innerWidth;\n//   canvas.height = scaleRatio * window.innerHeight;\n    canvas.width = Constants.WIDTH;\n    canvas.height = Constants.HEIGHT;\n}\n\n\nfunction render(canvas, context) {\n    const { me, others, platforms, weapons, powerups } = getCurrentState();\n    if (!me) {\n        return;\n    }\n\n    // Draw background\n    renderBackground(context);\n\n    // Draw all platforms\n    platforms.forEach(p => {\n        renderPlatform(context, p);\n    })\n\n    // Draw all bullets\n    weapons.forEach(w => {\n        switch(w.type) {\n            case Type.BULLET:\n                renderBullet(context, w);\n                break;\n            case Type.DRILL:\n                renderDrill(context, w);\n                break;\n            case Type.BOMB:\n                renderBomb(context, w);\n                break;\n            case Type.MINE:\n                renderMine(context, w);\n                break;\n            case Type.TELEPORT_BULLET:\n                renderTeleportBullet(context, w);\n                break;\n            case Type.FIRE_CLOUD:\n                renderFireCloud(context, w);\n                break;\n            default:\n                break;\n        }\n    })\n\n    // Draw all powerups\n    powerups.forEach(p => {\n        renderPowerup(context, p);\n    })\n\n    // Draw all players\n    if (Object.keys(me).length !== 0) {\n        renderPlayer(context, me);\n        renderHealthBar(context, me);\n        renderPlayerPowerup(context, me);\n        if (others.length === 0) {\n            renderCrown(context, me);\n        }\n    } else {\n        if (others.length === 1) {\n            renderCrown(context, others[0]);\n        }\n    }\n    others.forEach(p => {\n        renderPlayer(context, p);\n        renderHealthBar(context, p);\n        renderPlayerPowerup(context, p);\n    });\n\n    //Draw some weapons last\n    weapons.forEach(w => {\n        if (w.type === Type.EXPLOSION) {\n            renderExplosion(context, w);\n        } else if (w.type === Type.LASER) {\n            renderLaser(context, w);\n        } else if (w.type === Type.BAMBOO) {\n            renderBamboo(context, w);\n        }\n    })\n}\n\nfunction renderBackground(context) {\n    // const backgroundX = canvas.width / 2;\n    // const backgroundY = canvas.height / 2;\n    // const backgroundGradient = context.createRadialGradient(\n    //     backgroundX,\n    //     backgroundY,\n    //     WIDTH / 10,\n    //     backgroundX,\n    //     backgroundY,\n    //     HEIGHT / 2,\n    // );\n    // backgroundGradient.addColorStop(0, \"#c0c0ff\");\n    // backgroundGradient.addColorStop(1, \"#b0b0f5\");\n    context.fillStyle = \"#b0b0f5\";\n    context.fillRect(0, 0, Constants.WIDTH, Constants.HEIGHT);\n}\n\nfunction renderPlayer(context, player) {\n    let image = getAsset(\"pandaRight.png\");\n    if (player.character === Type.PANDA) {\n        if (player.faceRight) {\n            image = getAsset(\"pandaRight.png\")\n        } else {\n            image = getAsset(\"pandaLeft.png\")\n        }\n    } else if (player.character === Type.SEAL) {\n        if (player.faceRight) {\n            image = getAsset(\"sealRight.png\")\n        } else {\n            image = getAsset(\"sealLeft.png\")\n        }\n    } else if (player.character === Type.DINO) {\n        if (player.faceRight) {\n            image = getAsset(\"dinoRight.png\")\n        } else {\n            image = getAsset(\"dinoLeft.png\")\n        }\n    } else if (player.character === Type.EAGLE) {\n        if (player.faceRight) {\n            image = getAsset(\"eagleRight.png\")\n        } else {\n            image = getAsset(\"eagleLeft.png\")\n        }\n    } \n    context.drawImage(\n        image, player.x, player.y,\n        PLAYER_WIDTH, PLAYER_HEIGHT,\n    );\n}\n\nfunction renderHealthBar(context, player) {\n    let colour = `rgb(${20 + (135 * (100 - player.health)) / 50}, 155, 20)`;\n    if (player.health <= 50) {\n        colour = `rgb(155, ${155 - (135 * (50 - player.health)) / 50}, 20)`;\n    }\n    if (player.abilityMeter >= 100) {\n        context.fillStyle = \"white\";\n        context.fillRect(\n            player.x - 2, \n            player.y - Constants.HEALTHBAR_HEIGHT - 7, \n            (Constants.HEALTHBAR_WIDTH * player.health) / 100 + 4, \n            Constants.HEALTHBAR_HEIGHT + 4,\n        );\n    }\n    context.fillStyle = colour;\n    context.fillRect(\n        player.x, \n        player.y - Constants.HEALTHBAR_HEIGHT - 5, \n        (Constants.HEALTHBAR_WIDTH * player.health) / 100, \n        Constants.HEALTHBAR_HEIGHT,\n    );\n    context.fillStyle = \"black\";\n    context.textAlign = \"center\";\n    context.fillText(player.username, player.x + (Constants.PLAYER_WIDTH / 2), \n        player.y - Constants.HEALTHBAR_HEIGHT - 10);\n}\n\nfunction renderPlayerPowerup(context, player) {\n    switch(player.powerup) {\n        case Type.DRILL_POWERUP:\n            context.drawImage(getAsset(\"drillPowerup.png\"), player.x + 5, player.y + PLAYER_HEIGHT + 5,\n                PLAYER_POWERUP_WIDTH, PLAYER_POWERUP_HEIGHT,\n            );\n            break;\n        case Type.MINE_POWERUP:\n            context.drawImage(getAsset(\"minePowerup.png\"), player.x + 5, player.y + PLAYER_HEIGHT + 5,\n                PLAYER_POWERUP_WIDTH, PLAYER_POWERUP_HEIGHT,\n            );\n            break;\n        case Type.BOMB_POWERUP:\n            context.drawImage(getAsset(\"bombPowerup.png\"), player.x + 5, player.y + PLAYER_HEIGHT + 5,\n                PLAYER_POWERUP_WIDTH, PLAYER_POWERUP_HEIGHT,\n            );\n            break;\n        case Type.REFLECT_POWERUP:\n            context.drawImage(getAsset(\"reflectPowerup.png\"), player.x + 5, player.y + PLAYER_HEIGHT + 5,\n                PLAYER_POWERUP_WIDTH, PLAYER_POWERUP_HEIGHT,\n            );\n            break;\n        default:\n            break;\n    }\n    if (player.powerup !== Type.NO_POWERUP) {\n        context.font = \"12px Arial\";\n        context.fillStyle = \"black\";\n        context.fillText(player.specialAmmo, player.x + 20, player.y + PLAYER_HEIGHT + 15);\n    }\n}\n\nfunction renderCrown(context, player) {\n    context.drawImage(\n        getAsset(\"crown.png\"), player.x, player.y - Constants.HEALTHBAR_HEIGHT - 40, \n        Constants.PLAYER_WIDTH, 18\n    );\n}\n\nfunction renderBullet(context, bullet) {\n    if (bullet.character === Type.SEAL) {\n        context.drawImage(getAsset(\"blueBullet.png\"), bullet.x, bullet.y,\n            BULLET_WIDTH, BULLET_HEIGHT,\n        );\n        return;\n    }\n    let image = getAsset(\"greenBullet.png\");\n    if (bullet.character === Type.PANDA) {\n        image = getAsset(\"greenBullet.png\");\n    } else if (bullet.character === Type.DINO) {\n        image = getAsset(\"yellowBullet.png\");\n    } else if (bullet.character === Type.EAGLE) {\n        image = getAsset(\"redBullet.png\");\n    }\n    context.save();\n    context.translate(bullet.x + (BULLET_WIDTH / 2), bullet.y + (BULLET_HEIGHT / 2));\n    context.rotate(Math.PI / 2 - bullet.dir);\n    context.drawImage(image, -BULLET_WIDTH / 2, -BULLET_HEIGHT / 2,\n        BULLET_WIDTH, BULLET_HEIGHT,\n    );\n    context.restore();\n}\n\nfunction renderDrill(context, drill) {\n    context.save();\n    context.translate(drill.x + (DRILL_WIDTH / 2), drill.y + (DRILL_HEIGHT / 2));\n    context.rotate(Math.PI / 2 - drill.dir);\n    context.drawImage(getAsset(\"drillRight.png\"), -DRILL_WIDTH / 2, -DRILL_HEIGHT / 2,\n        DRILL_WIDTH, DRILL_HEIGHT,\n    );\n    context.restore();\n}\n\nfunction renderExplosion(context, explosion) {\n    context.drawImage(getAsset(\"explosion.png\"), explosion.x, explosion.y,\n        EXPLOSION_WIDTH, EXPLOSION_HEIGHT,\n    );\n}\n\nfunction renderBomb(context, bomb) {\n    context.drawImage(getAsset(\"bomb.png\"), bomb.x, bomb.y,\n        BOMB_WIDTH, BOMB_HEIGHT,\n    );\n}\n\nfunction renderMine(context, mine) {\n    context.drawImage(getAsset(\"mine.png\"), mine.x, mine.y,\n        MINE_WIDTH, MINE_HEIGHT,\n    );\n}\n\nfunction renderBamboo(context, bamboo) {\n    if (Math.abs(Math.sin(bamboo.dir)) > 0.5) {\n        context.drawImage(getAsset(\"bamboo.png\"), bamboo.x, bamboo.y,\n            Constants.BAMBOO_WIDTH, Constants.BAMBOO_HEIGHT\n        );\n    } else {\n        context.save();\n        context.translate(bamboo.x + (Constants.BAMBOO_HEIGHT / 2), bamboo.y + (Constants.BAMBOO_WIDTH / 2));\n        context.rotate(Math.PI / 2);\n        context.drawImage(getAsset(\"bamboo.png\"), -Constants.BAMBOO_WIDTH / 2, -Constants.BAMBOO_HEIGHT / 2,\n            Constants.BAMBOO_WIDTH, Constants.BAMBOO_HEIGHT\n        );\n        context.restore();\n    }\n}\n\nfunction renderLaser(context, laser) {\n    if (laser.cooldown !== 0) {\n        context.globalAlpha = 0.5;\n    }\n    if (laser.dir > 0) {\n        context.drawImage(getAsset(\"laser.png\"), laser.x, laser.y, \n            laser.width, Constants.LASER_HEIGHT\n        );\n    } else {\n        context.drawImage(getAsset(\"laser.png\"), laser.x - laser.width, laser.y, \n            laser.width, Constants.LASER_HEIGHT\n        );\n    }\n    context.globalAlpha = 1;\n}\n\nfunction renderFireCloud(context, cloud) {\n    if (cloud.cooldown <= 5) {\n        context.globalAlpha = 0.75;\n    } else {\n        context.globalAlpha = 0.3;\n    }\n    context.drawImage(getAsset(\"fireCloud.png\"), cloud.x, cloud.y,\n        cloud.width, cloud.height,\n    );\n    context.globalAlpha = 1;\n}\n\nfunction renderTeleportBullet(context, tBullet) {\n    let image = getAsset(\"teleportBulletRight.png\");\n    if (tBullet.dir > Math.PI) {\n        image = getAsset(\"teleportBulletLeft.png\");\n    }\n    context.drawImage(image, tBullet.x, tBullet.y,\n        Constants.TELEPORT_BULLET_WIDTH, Constants.TELEPORT_BULLET_HEIGHT,\n    );\n}\n\nfunction renderPlatform(context, platform) {\n    const platformGradient = context.createLinearGradient(\n        platform.x,\n        platform.y + platform.height,\n        platform.x + platform.width,\n        platform.y\n    );\n    platformGradient.addColorStop(0, \"#1d5e8c\");\n    platformGradient.addColorStop(1, \"#57a4da\");\n    context.fillStyle = platformGradient;\n    context.fillRect(platform.x, platform.y, platform.width, platform.height);\n}\n\nfunction renderPowerup(context, powerup) {\n    switch(powerup.type) {\n        case Type.DRILL_POWERUP:\n            context.drawImage(getAsset(\"drillPowerup.png\"), powerup.x, powerup.y,\n                POWERUP_WIDTH, POWERUP_HEIGHT,\n            );\n            break;\n        case Type.MINE_POWERUP:\n            context.drawImage(getAsset(\"minePowerup.png\"), powerup.x, powerup.y,\n                POWERUP_WIDTH, POWERUP_HEIGHT,\n            );\n            break;\n        case Type.BOMB_POWERUP:\n            context.drawImage(getAsset(\"bombPowerup.png\"), powerup.x, powerup.y,\n                POWERUP_WIDTH, POWERUP_HEIGHT,\n            );\n            break;\n        case Type.REFLECT_POWERUP:\n            context.drawImage(getAsset(\"reflectPowerup.png\"), powerup.x, powerup.y,\n                POWERUP_WIDTH, POWERUP_HEIGHT,\n            );\n            break;\n        default:\n            break;\n    }\n}\n","\nexport class InputHandler {\n    constructor(room, networkHandler, canvas) {\n        this.room = room;\n        this.networkHandler = networkHandler;\n        this.canvas = canvas;\n        this.props = {\n            room: this.room,\n            networkHandler: this.networkHandler,\n            canvas: this.canvas,\n        }\n        this.onClickEvent = this.onClick.bind(this.props);\n        this.onKeyPressEvent = this.onKeyPress.bind(this.props);\n        this.onKeyUpEvent = this.onKeyUp.bind(this.props);\n    }\n\n    onClick(e) {\n        if (e.button === 0) {\n            const left = this.canvas.offsetLeft + this.canvas.clientLeft;\n            const top = this.canvas.offsetTop + this.canvas.clientTop;\n            this.networkHandler.sendClick(e.pageX - left, e.pageY - top, this.room);\n        }\n    }\n\n    onKeyPress(e) {\n        const keys = [\"W\", \"A\", \"D\", \"Q\"];\n        const key = String.fromCharCode(e.keyCode).toUpperCase();\n        if (keys.includes(key)) {\n            this.networkHandler.sendKeyPress(key, this.room);\n        }\n    }\n\n    onKeyUp(e) {\n        const keys = [\"A\", \"D\"];\n        const key = String.fromCharCode(e.keyCode).toUpperCase();\n        if (keys.includes(key)) {\n            this.networkHandler.sendKeyUp(key, this.room);\n        }\n    }\n\n    startCapturingInput() {\n        this.canvas.addEventListener(\"click\", this.onClickEvent);\n        window.addEventListener('keypress', this.onKeyPressEvent);\n        window.addEventListener('keyup', this.onKeyUpEvent);\n        console.log(\"Starting to capture input\");\n    }\n    \n    stopCapturingInput() {\n        this.canvas.removeEventListener(\"click\", this.onClickEvent);\n        window.removeEventListener('keypress', this.onKeyPressEvent);\n        window.removeEventListener('keyup', this.onKeyUpEvent);\n        console.log(\"Stopping capture input\");\n    }\n}\n\n// function handleInput(x, y) {\n//   const dir = Math.atan2(x - window.innerWidth / 2, window.innerHeight / 2 - y);\n//   updateDirection(dir);\n// }\n","import axios from \"axios\";\n\nimport { GET_ERRORS, GET_USER_ROOM, RESET_ROOM } from \"./types\";\n\nexport const joinRoom = (user_room, history) => dispatch => {\n    axios.post(\"/game/join\", user_room)\n        .then(res => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: {}\n            })\n            dispatch({\n                type: GET_USER_ROOM,\n                payload: {\n                    user: user_room.username,\n                    room: user_room.room,\n                }\n            })\n            history.push(\"/lobby\");\n        })\n        .catch(err => {\n            console.log(err.response.data);\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const resetRoom = () => dispatch => {\n    dispatch({\n        type: RESET_ROOM,\n        payload: {}\n    });\n}\n\nexport const refreshErrors = () => dispatch => {\n    dispatch({\n        type: GET_ERRORS,\n        payload: {}\n    })\n}\n","import React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { Renderer } from \"../../game-client/render\";\nimport { InputHandler } from \"../../game-client/input\";\nimport { downloadAssets } from \"../../game-client/assets\";\nimport { initState, resetLobbyStart } from \"../../game-client/state\";\nimport { resetRoom } from \"../../actions/playerActions\";\n\nconst GameCanvas = (props) => {\n    const canvasRef = useRef(null);\n    const renderer = useRef();\n    const inputHandler = useRef();\n\n    useEffect(() => {\n        if (props.player.room === \"\") {\n            props.history.push(\"/\");\n            return;\n        }\n        downloadAssets()\n            .then(() => {\n                initState();\n                if (canvasRef.current) {\n                    renderer.current = new Renderer(canvasRef.current);\n                    renderer.current.startRendering();\n                }\n            }).catch(console.error);\n        inputHandler.current = new InputHandler(props.player.room, props.network.handler, canvasRef.current);\n        inputHandler.current.startCapturingInput();\n        props.resetRoom();\n        resetLobbyStart();\n        return () => {\n            if (inputHandler.current instanceof InputHandler) {\n                inputHandler.current.stopCapturingInput();\n            }\n            if (renderer.current instanceof Renderer) {\n                renderer.current.stopRendering();\n            }\n        }\n    }, []);\n\n    return (\n        <canvas ref={canvasRef}></canvas>\n    );\n};\n\nGameCanvas.propTypes = {\n    resetRoom: PropTypes.func.isRequired,\n    player: PropTypes.object.isRequired,\n    network: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    player: state.player,\n    network: state.network,\n});\n\nexport default connect(\n    mapStateToProps,\n    { resetRoom }\n)(GameCanvas);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Tutorial = () => {\n    return (\n        <div style={{ height: \"75vh\" }} className=\"container\">\n            <div style={{ marginTop: \"4rem\" }} className=\"row\">\n                <div className=\"col s12 center-align\">\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\n                        <i className=\"material-icons left\">\n                            keyboard_backspace\n                        </i>\n                        Back\n                    </Link>\n                    <div className=\"col s12\">\n                        <h4>\n                            <span style={{ fontFamily: \"Verdana, Geneva, sans-serif\" }}>How To Play</span>\n                        </h4>\n                        <br />\n                    </div>\n\n                    <div class=\"col s12\">\n                        <div class=\"card-panel\">\n                            <p>\n                                Platform Arena is a platformer fighting game. Eliminate all your enemies to win! <br />\n                                When your healthbar is glowing, you can use your ability! These are the controls: <br />\n                                W - Jump <br />\n                                A - Left <br />\n                                D - Right <br />\n                                Left Mouse Click - Shoot or Use Powerup <br />\n                                Q - Ability <br />\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"col s12\">\n                        <div class=\"card-panel\">\n                            <p>\n                                There are 4 playable characters, each with unique bullets and abilities.\n                            </p>\n                            <p>\n                                <img src={process.env.PUBLIC_URL + \"/assets/pandaRight.png\"} alt=\"Panda\" />   \n                                &ensp;- Panda has a fast bullet with a high fire rate.\n                                Their special ability is to launch a bamboo storm.\n                            </p>\n                            <p>\n                                <img src={process.env.PUBLIC_URL + \"/assets/sealRight.png\"} alt=\"Seal\" /> \n                                &ensp;- Seal has a very slow water bullet with a slow fire rate. \n                                Their special ability is a laser.\n                            </p>\n                            <p>\n                                <img src={process.env.PUBLIC_URL + \"/assets/dinoRight.png\"} alt=\"Dino\" /> \n                                &ensp;- Dino has a slow explosive bullet with a slow fire rate.\n                                Their special ability is a fire cloud \n                            </p>\n                            <p>\n                                <img src={process.env.PUBLIC_URL + \"/assets/eagleRight.png\"} alt=\"Eagle\" /> \n                                &ensp;- Eagle has a very fast weaker bullet with a very high fire rate.\n                                Their special ability is a teleporting bullet.\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"col s12\">\n                        <div class=\"card-panel\">\n                            <p>\n                                Collect powerups to gain special weapons. \n                            </p>\n                            <p>\n                                <img src={process.env.PUBLIC_URL + \"/assets/drillPowerup.png\"} alt=\"Drill\" />   \n                                &ensp;- Drill breaks through platforms and explodes  \n                            </p>\n                            <p>\n                                <img src={process.env.PUBLIC_URL + \"/assets/minePowerup.png\"} alt=\"Mine\" /> \n                                &ensp;- Mine stays on the ground and explodes when stepped on\n                            </p>\n                            <p>\n                                <img src={process.env.PUBLIC_URL + \"/assets/bombPowerup.png\"} alt=\"Bomb\" /> \n                                &ensp;- Bomb bounces around like a projectile and explodes \n                            </p>\n                            <p>\n                                <img src={process.env.PUBLIC_URL + \"/assets/reflectPowerup.png\"} alt=\"Reflect\" /> \n                                &ensp;- Reflecting bullets bounce around before disappearing \n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Tutorial;","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { resetErrors } from \"../../actions/authActions\";\nimport { joinRoom, resetRoom } from \"../../actions/playerActions\";\nimport { resetNetworkHandler } from \"../../actions/networkActions\";\nimport classnames from \"classnames\";\n\nconst RoomSelection = (props) => {\n    const [username, setUsername] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            setUsername(props.auth.user.username);\n        }\n        props.resetRoom();\n        if (Object.keys(props.network.handler).length !== 0) {\n            props.network.handler.disconnect();\n        }\n        props.resetNetworkHandler();\n    }, []);\n\n    useEffect(() => {\n        if (props.errors) {\n            setErrors(props.errors);\n        }\n    }, [props.errors]);\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const user_room = {\n            username: username,\n            room: room,\n        }\n\n        props.joinRoom(user_room, props.history);\n    }\n    \n\n    return (\n        <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n            <div style={{ marginTop: \"4rem\" }} className=\"row\">\n                <div className=\"col s8 offset-s2 center-align\">\n                    <div className=\"col s12\">\n                        <h4>\n                            <span style={{ fontFamily: \"Verdana, Geneva, sans-serif\" }}>Platform Arena</span>\n                        </h4>\n                        <p className=\"flow-text grey-text text-darken-1\">\n                            A multiplayer fighting game.\n                        </p>\n                        <br />\n                    </div>\n                    <form noValidate onSubmit={onSubmit}>\n                        {props.auth.isAuthenticated \n                            ? <p className=\"flow-text grey-text text-darken-1\">\n                                Welcome back {props.auth.user.username}!\n                            </p>\n                            : <div className=\"input-field col s12\">\n                                <input\n                                    onChange={e => setUsername(e.target.value)}\n                                    value={username}\n                                    error={errors.username}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    className={classnames(\"\", { invalid: errors.username })}\n                                />\n                                <label htmlFor=\"username\">Username</label>\n                                <span className=\"red-text\">{errors.username}</span>\n                            </div>\n                        }\n                        <div className=\"input-field col s12\">\n                            <input\n                                onChange={e => setRoom(e.target.value)}\n                                value={room}\n                                error={errors.room}\n                                id=\"email\"\n                                type=\"email\"\n                                className={classnames(\"\", { invalid: errors.room })}\n                            />\n                            <label htmlFor=\"room\">Room</label>\n                            <span className=\"red-text\">{errors.room}</span>\n                        </div>\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                            <button\n                                style={{\n                                    width: \"250px\",\n                                    borderRadius: \"3px\",\n                                    letterSpacing: \"1.5px\",\n                                    marginTop: \"1rem\"\n                                }}\n                                type=\"submit\"\n                                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                            >\n                                {props.auth.isAuthenticated ? \"Play\" : \"Play as Guest\"}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nRoomSelection.propTypes = {\n    joinRoom: PropTypes.func.isRequired,\n    resetRoom: PropTypes.func.isRequired,\n    resetErrors: PropTypes.func.isRequired,\n    resetNetworkHandler: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    network: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors,\n    network: state.network\n});\n\nexport default connect(\n    mapStateToProps,\n    { joinRoom, resetErrors, resetRoom, resetNetworkHandler }\n)(RoomSelection);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./client/utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./client/actions/authActions\"; \n\nimport { Provider } from \"react-redux\";\nimport store from \"./client/store\";\n\nimport Navbar from \"./client/components/layouts/Navbar\";\nimport Register from \"./client/components/accounts/RegisterForm\";\nimport Login from \"./client/components/accounts/LoginForm\";\nimport UserProfile from \"./client/components/accounts/UserProfile\";\nimport Lobby from \"./client/components/layouts/Lobby\";\nimport GameCanvas from \"./client/components/layouts/GameCanvas\";\nimport Tutorial from \"./client/components/layouts/Tutorial\";\nimport RoomSelection from \"./client/components/layouts/RoomSelection\";\nimport PrivateRoute from \"./client/components/private-route/PrivateRoute\";\n\nif (localStorage.jwtToken) {\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    store.dispatch(setCurrentUser(decoded));\n\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        store.dispatch(logoutUser());\n        window.location.href = \"./login\";\n    }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path=\"/lobby\" component={Lobby} />\n                    <Route exact path=\"/game\" component={GameCanvas} />\n                    <Route component={DefaultContainer} />\n                </Switch>\n            </div>\n        </Router> \n    </Provider>  \n  );\n}\n  \nconst DefaultContainer = () => (\n    <div>\n        <Navbar />\n        <Route exact path=\"/\" component={RoomSelection} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/how-to-play\" component={Tutorial} />\n        <Switch>\n            <PrivateRoute exact path=\"/profile\" component={UserProfile} />\n        </Switch>\n    </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = Object.freeze({\n    PLAYER: 1,\n    BULLET: 2,\n    PLATFORM: 3,\n    POWERUP: 4,\n    NO_POWERUP: 5,\n    SHIELD_POWERUP: 6,\n    DRILL_POWERUP: 7,\n    BOMB_POWERUP: 8,\n    MINE_POWERUP: 9,\n    REFLECT_POWERUP: 10,\n    DRILL: 11,\n    BOMB: 12,\n    MINE: 13,\n    EXPLOSION: 14,\n    NO_CHARACTER: 15,\n    PANDA: 16,\n    SEAL: 17,\n    DINO: 18,\n    EAGLE: 19,\n    BAMBOO_STORM: 20,\n    BAMBOO: 21,\n    LASER: 22,\n    FIRE_CLOUD: 23,\n    TELEPORT_BULLET: 24\n});","module.exports = Object.freeze({\n    PLAYER_WIDTH: 32,\n    PLAYER_HEIGHT: 32,\n    PLAYER_MAX_HP: 100,\n    PLAYER_SPEED: 400,\n    PLAYER_JUMP: 800,\n    PLAYER_GRAVITY: 50,\n    PLAYER_FIRE_COOLDOWN: 0.5,\n\n    BULLET_WIDTH: 32,\n    BULLET_HEIGHT: 10,\n    BULLET_SPEED: 600,\n    BULLET_DAMAGE: 10,\n\n    REFLECT_BULLET_BOUNCES: 5,\n    REFLECT_BULLET_COOLDOWN: 10,\n\n    DRILL_WIDTH: 32,\n    DRILL_HEIGHT: 24,\n    DRILL_SPEED: 300,\n\n    BOMB_WIDTH: 32,\n    BOMB_HEIGHT: 32,\n    BOMB_SPEED: 600,\n    BOMB_GRAVITY: 10,\n    BOMB_COOLDOWN: 10,\n    BOMB_LIFETIME: 100,\n\n    MINE_WIDTH: 32,\n    MINE_HEIGHT: 8,\n    MINE_SPEED: 100,\n    MINE_COOLDOWN: 50,\n\n    EXPLOSION_WIDTH: 64,\n    EXPLOSION_HEIGHT: 64,\n    EXPLOSION_DAMAGE: 10,\n\n    BAMBOO_STORM_COOLDOWN: 25,\n    BAMBOO_STORM_TIMES: 16,\n    BAMBOO_WIDTH: 256,\n    BAMBOO_HEIGHT: 64,\n    BAMBOO_SPEED: 600,\n    BAMBOO_COOLDOWN: 40,\n    BAMBOO_DAMAGE: 20,\n\n    LASER_HEIGHT: 32,\n    LASER_COOLDOWN: 20,\n    LASER_LIFETIME: 60,\n    LASER_DAMAGE: 20,\n\n    FIRE_CLOUD_WIDTH: 300,\n    FIRE_CLOUD_HEIGHT: 300,\n    FIRE_CLOUD_COOLDOWN: 50,\n    FIRE_CLOUD_LIFETIME: 500,\n    FIRE_CLOUD_DAMAGE: 15,\n\n    TELEPORT_BULLET_WIDTH: 32,\n    TELEPORT_BULLET_HEIGHT: 10,\n    TELEPORT_BULLET_SPEED: 1200,\n    TELEPORT_BULLET_DAMAGE: 15,\n\n    PLATFORM_WIDTH: 32,\n    PLATFORM_HEIGHT: 32,\n    PLATFORM_RESPAWN: 500,\n\n    POWERUP_WIDTH: 20,\n    POWERUP_HEIGHT: 20,\n    PLAYER_POWERUP_WIDTH: 10,\n    PLAYER_POWERUP_HEIGHT: 10,\n\n\n    HEALTHBAR_WIDTH: 32,\n    HEALTHBAR_HEIGHT: 8,\n\n    SCORE_BULLET_HIT: 20,\n    SCORE_PER_SECOND: 1,\n\n    WIDTH: 1024, \n    HEIGHT: 1024/12 * 9 - 32,\n    MAP_SIZE: 3000,\n    MSG_TYPES: {\n        JOIN_LOBBY: \"join_lobby\",\n        START_GAME: \"start_game\",\n        LOBBY_UPDATE: \"lobby_update\",\n        GAME_UPDATE: \"update\",\n        KEYPRESS: \"keypress\",\n        KEYUP: \"keyup\",\n        CLICK: \"click\",\n        GAME_OVER: \"dead\",\n    },\n});\n"],"sourceRoot":""}